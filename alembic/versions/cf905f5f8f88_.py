"""empty message

Revision ID: cf905f5f8f88
Revises: 777e56e24a32
Create Date: 2025-01-14 18:27:03.037813

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cf905f5f8f88'
down_revision: Union[str, None] = '777e56e24a32'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('country_image', sa.String(length=2048), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('UTC', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("timezone('UTC', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('name', 'countries', [], unique=False)
    op.create_table('temp',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('UTC', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("timezone('UTC', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('brands_to_countries',
    sa.Column('brand_id', sa.BigInteger(), nullable=True),
    sa.Column('country_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('UTC', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("timezone('UTC', now())"), nullable=False),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('country', 'brands_to_countries', [], unique=False)
    op.drop_index('likes_index_watch_id', table_name='likes')
    op.drop_table('likes')
    op.drop_index('watch_images_composite_index', table_name='watch_images')
    op.drop_index('watch_images_image_type_index', table_name='watch_images')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('watch_images_image_type_index', 'watch_images', ['image_type'], unique=False)
    op.create_index('watch_images_composite_index', 'watch_images', ['watch_id', 'image_type'], unique=False)
    op.create_table('likes',
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('watch_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('UTC'::text, now())"), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('UTC'::text, now())"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='likes_user_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['watch_id'], ['watches.id'], name='likes_watch_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='likes_pkey'),
    sa.UniqueConstraint('id', name='likes_id_key')
    )
    op.create_index('likes_index_watch_id', 'likes', ['watch_id'], unique=False)
    op.drop_index('country', table_name='brands_to_countries')
    op.drop_table('brands_to_countries')
    op.drop_table('temp')
    op.drop_index('name', table_name='countries')
    op.drop_table('countries')
    # ### end Alembic commands ###
